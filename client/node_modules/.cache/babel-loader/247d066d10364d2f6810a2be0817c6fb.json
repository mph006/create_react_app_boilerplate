{"ast":null,"code":"var _jsxFileName = \"/Users/mattherman/Documents/myResume/interviewPrep/react_boilerplate/my-app/client/src/components/MockDataTable.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { getFakeData } from \"../api/api\";\nimport { Table } from 'antd';\nimport '../styles/MockDataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst formatColumns = data => {\n  console.log(data);\n\n  if (!data) {\n    return [];\n  }\n\n  return [];\n};\n\nexport default function MockDataTable() {\n  _s();\n\n  const numRecords = 3;\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([`helloWorld-${numRecords}`, {\n    params: {\n      numRecords\n    }\n  }], getFakeData, {\n    keepPreviousData: true,\n    enabled: true\n  });\n\n  let retElem = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading ...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this);\n\n  if (error) {\n    retElem = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error Fetching Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  } else if (!isLoading && data && data.length > 0) {\n    retElem = /*#__PURE__*/_jsxDEV(Table, {\n      columns: formatColumns(data),\n      dataSource: data,\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MockDataTable\",\n    children: retElem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MockDataTable, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MockDataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MockDataTable\");","map":{"version":3,"sources":["/Users/mattherman/Documents/myResume/interviewPrep/react_boilerplate/my-app/client/src/components/MockDataTable.js"],"names":["useQuery","getFakeData","Table","formatColumns","data","console","log","MockDataTable","numRecords","isLoading","error","params","keepPreviousData","enabled","retElem","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAAQC,KAAR,QAAoB,MAApB;AACA,OAAO,6BAAP;;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAG,CAACA,IAAJ,EAAS;AAAC,WAAO,EAAP;AAAU;;AACpB,SAAO,EAAP;AACH,CAJD;;AAMA,eAAe,SAASG,aAAT,GAAyB;AAAA;;AACtC,QAAMC,UAAU,GAAG,CAAnB;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBN,IAAAA;AAApB,MAA6BJ,QAAQ,CACzC,CAAE,cAAaQ,UAAW,EAA1B,EAA6B;AAACG,IAAAA,MAAM,EAAE;AAACH,MAAAA;AAAD;AAAT,GAA7B,CADyC,EAEzCP,WAFyC,EAGzC;AAACW,IAAAA,gBAAgB,EAAC,IAAlB;AAAwBC,IAAAA,OAAO,EAAC;AAAhC,GAHyC,CAA3C;;AAKA,MAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAGJ,KAAH,EAAS;AACLI,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH,GAFD,MAGK,IAAG,CAACL,SAAD,IAAcL,IAAd,IAAsBA,IAAI,CAACW,MAAL,GAAc,CAAvC,EAAyC;AAC1CD,IAAAA,OAAO,gBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEX,aAAa,CAACC,IAAD,CAA7B;AAAqC,MAAA,UAAU,EAAEA,IAAjD;AAAuD,MAAA,IAAI,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACKU;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArBuBP,a;UAEaP,Q;;;KAFbO,a","sourcesContent":["import { useQuery } from \"react-query\";\nimport { getFakeData } from \"../api/api\";\nimport {Table} from 'antd'\nimport '../styles/MockDataTable.css';\n\nconst formatColumns = (data) => {\n    console.log(data)\n    if(!data){return []}\n    return []\n}\n\nexport default function MockDataTable() {\n  const numRecords = 3\n  const { isLoading, error, data } = useQuery(\n    [`helloWorld-${numRecords}`, {params: {numRecords}}], \n    getFakeData, \n    {keepPreviousData:true, enabled:true});\n\n  let retElem = <div>Loading ...</div>\n\n  if(error){\n      retElem = <div>Error Fetching Data</div>\n  }\n  else if(!isLoading && data && data.length > 0){\n      retElem = <Table columns={formatColumns(data)} dataSource={data} size=\"small\" />\n  }\n\n  return (\n    <div className=\"MockDataTable\">\n        {retElem}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}